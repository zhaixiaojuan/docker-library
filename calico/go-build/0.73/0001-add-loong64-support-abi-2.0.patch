From 16859a97f8bb11a62ad359953331dcbacf039689 Mon Sep 17 00:00:00 2001
From: yzewei <yangzewei@loongson.cn>
Date: Sun, 28 Apr 2024 17:11:04 +0800
Subject: [PATCH] add loong64 support abi-2.0

Signed-off-by: yzewei <yangzewei@loongson.cn>
---
 Dockerfile.loong64 | 80 ++++++++++++++++++++++++++++++++++++++++++++++
 Makefile           |  8 ++++-
 socket_type.h      | 55 +++++++++++++++++++++++++++++++
 3 files changed, 142 insertions(+), 1 deletion(-)
 create mode 100644 Dockerfile.loong64
 create mode 100644 socket_type.h

diff --git a/Dockerfile.loong64 b/Dockerfile.loong64
new file mode 100644
index 0000000..047d2b1
--- /dev/null
+++ b/Dockerfile.loong64
@@ -0,0 +1,80 @@
+FROM lcr.loongnix.cn/library/golang:1.19-alpine
+LABEL maintainer="Zewei Yang <yangzewei@loongson.cn>"
+
+# Install su-exec for use in the entrypoint.sh (so processes run as the right user)
+# Install bash for the entry script (and because it's generally useful)
+# Install curl
+# Install git for fetching Go dependencies
+# Install ssh for fetching Go dependencies
+# Install mercurial for fetching go dependencies
+# Install wget since it's useful for fetching
+# Install make for building things
+# Install util-linux for column command (used for output formatting).
+# Install grep, sed, zip, and jq for use in some Makefiles
+# Install shadow for useradd (it allows to use big UID)
+# Install libelf-dev zlib1g-dev for dynamic bpftool
+#RUN apt clean && apt update -y && apt upgrade -y && apt install -y curl git ssh mercurial make wget util-linux grep sed jq zip libpcap-dev libelf-dev zlib1g-dev clang iproute2
+
+RUN apk update && apk add --no-cache su-exec curl bash git openssh make wget util-linux tini file grep sed jq zip shadow libpcap-dev elfutils-dev zlib-dev build-base linux-headers clang llvm iproute2-dev musl-dev
+RUN apk upgrade --no-cache
+COPY socket_type.h /usr/include/bits
+
+
+# Disable ssh host key checking
+RUN echo 'Host *' >> /etc/ssh/ssh_config \
+  && echo '    StrictHostKeyChecking no' >> /etc/ssh/ssh_config
+
+# Disable cgo so that binaries we build will be fully static.
+ENV CGO_ENABLED=0
+ENV GOPROXY=http://goproxy.cn
+
+# Recompile the standard library with cgo disabled.  This prevents the standard library from being
+# marked stale, causing full rebuilds every time.
+RUN go install -v std
+
+# Install ginkgo CLI tool for running tests
+RUN git clone -b v1.16.5 --depth=1 https://github.com/onsi/ginkgo && \
+  cd ginkgo && go get -u golang.org/x/sys golang.org/x/net && \
+  go mod tidy && go mod download && \
+  go install ./ginkgo && \
+  cd .. && rm -rf ginkgo
+  
+
+# Install linting tools
+ENV GO_LINT_VERSION=v1.46.2
+RUN git clone -b ${GO_LINT_VERSION} --depth=1 https://github.com/golangci/golangci-lint && \
+  cd golangci-lint && go get -u golang.org/x/sys golang.org/x/net && \
+  go mod tidy && go mod download && \
+  go install ./cmd/golangci-lint && \
+  cd .. && rm -rf golangci-lint && \
+  golangci-lint --version
+
+# Install license checking tool.
+RUN go install github.com/pmezard/licenses@master
+
+# Install tool to merge coverage reports.
+RUN go install github.com/wadey/gocovmerge@master
+
+# Install CLI tool for working with yaml files
+ENV YQ_VERSION=3.4.1
+RUN git clone -b ${YQ_VERSION} --depth=1 https://github.com/mikefarah/yq && \
+  cd yq && go get -u golang.org/x/sys golang.org/x/net && \
+  go mod tidy && go mod download && \
+  go install ./ && \
+  cd .. && rm -rf yq
+
+# Delete all the Go sources that were downloaded, we only rely on the binaries
+RUN rm -rf /go/src/*
+
+# Install generation tools.
+RUN  go install k8s.io/code-generator/cmd/openapi-gen@v0.28.0
+RUN  go install k8s.io/code-generator/cmd/deepcopy-gen@v0.28.0
+
+# Install ginkgo v2 as ginkgo2 and keep ginkgo v1 as ginkgo
+RUN mv /go/bin/ginkgo /go/bin/ginkgo1 && \
+  go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.3 && \
+  mv /go/bin/ginkgo /go/bin/ginkgo2 && \
+  mv /go/bin/ginkgo1 /go/bin/ginkgo
+
+# Ensure that everything under the GOPATH is writable by everyone
+RUN chmod -R 777 $GOPATH
diff --git a/Makefile b/Makefile
index cdb9d89..f1442e1 100644
--- a/Makefile
+++ b/Makefile
@@ -25,6 +25,9 @@ endif
 ifeq ($(BUILDARCH),armv7l)
         BUILDARCH=armv7
 endif
+ifeq ($(BUILDARCH),loongarch64)
+        BUILDARCH=loong64
+endif
 
 # unless otherwise set, I am building for my own architecture, i.e. not cross-compiling
 ARCH ?= $(BUILDARCH)
@@ -74,7 +77,10 @@ image: calico/go-build
 calico/go-build: register
 	# Make sure we re-pull the base image to pick up security fixes.
 	# Limit the build to use only one CPU, This helps to work around qemu bugs such as https://bugs.launchpad.net/qemu/+bug/1098729
-	docker build $(DOCKER_BUILD_ARGS) --pull -t $(ARCHIMAGE) -f $(DOCKERFILE) .
+	docker build $(DOCKER_BUILD_ARGS) --pull \
+		--build-arg http_proxy=$(http_proxy) \
+		--build-arg https_proxy=$(https_proxy) \
+		-t $(ARCHIMAGE) -f $(DOCKERFILE) .
 
 image-all: $(addprefix sub-image-,$(ARCHES))
 sub-image-%:
diff --git a/socket_type.h b/socket_type.h
new file mode 100644
index 0000000..13aa922
--- /dev/null
+++ b/socket_type.h
@@ -0,0 +1,55 @@
+/* Define enum __socket_type for generic Linux.
+   Copyright (C) 1991-2024 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#ifndef _SYS_SOCKET_H
+# error "Never include <bits/socket_type.h> directly; use <sys/socket.h> instead."
+#endif
+
+/* Types of sockets.  */
+enum __socket_type
+{
+  SOCK_STREAM = 1,		/* Sequenced, reliable, connection-based
+				   byte streams.  */
+#define SOCK_STREAM SOCK_STREAM
+  SOCK_DGRAM = 2,		/* Connectionless, unreliable datagrams
+				   of fixed maximum length.  */
+#define SOCK_DGRAM SOCK_DGRAM
+  SOCK_RAW = 3,			/* Raw protocol interface.  */
+#define SOCK_RAW SOCK_RAW
+  SOCK_RDM = 4,			/* Reliably-delivered messages.  */
+#define SOCK_RDM SOCK_RDM
+  SOCK_SEQPACKET = 5,		/* Sequenced, reliable, connection-based,
+				   datagrams of fixed maximum length.  */
+#define SOCK_SEQPACKET SOCK_SEQPACKET
+  SOCK_DCCP = 6,		/* Datagram Congestion Control Protocol.  */
+#define SOCK_DCCP SOCK_DCCP
+  SOCK_PACKET = 10,		/* Linux specific way of getting packets
+				   at the dev level.  For writing rarp and
+				   other similar things on the user level. */
+#define SOCK_PACKET SOCK_PACKET
+
+  /* Flags to be ORed into the type parameter of socket and socketpair and
+     used for the flags parameter of paccept.  */
+
+  SOCK_CLOEXEC = 02000000,	/* Atomically set close-on-exec flag for the
+				   new descriptor(s).  */
+#define SOCK_CLOEXEC SOCK_CLOEXEC
+  SOCK_NONBLOCK = 00004000	/* Atomically mark descriptor(s) as
+				   non-blocking.  */
+#define SOCK_NONBLOCK SOCK_NONBLOCK
+};
-- 
2.41.0

